[tool.poetry]
name = "mlpforecast"
version = "0.1.0"
description = "Multilayer Perceptron Learning Models for Time Series Forecasting"
authors = ["sambaiga <sambaiga@gmail.com>",  "apina <fred.apina@gmail.com>"]
readme = "README.md"



[tool.poetry.dependencies]
python = ">=3.11,<3.12"
numpy ="^1.24.3"
torch = "^2.0.1"
lightning ="^2.0.8"
optuna = "^3.2.0"
optuna-integration="^3.6.0"
scikit-learn="1.5.1"
pandas="1.5.3"
pyarrow=">=13.0.0,<14.0.0"
pytimetk="^0.4.0"
matplotlib="^3.8.4"
ppscore="^1.3.0"
torchmetrics= "^1.4.0"
wandb="^0.17.4"
tqdm="^4.65.1.dev3+g5587f0d"
tensorboard="^2.1.5"
rich="^13.7.1"
arviz="^0.18.0"
astral="^3.2"
altair = ">=5.3.0"
vl-convert-python=">1.4.0"
matplotlib_inline = ">=0.1.6"
seaborn = ">=0.13.2"
statsmodels = ">=0.14.0"
coreforecast="^0.0.6"
utilsforecast="^0.0.25"
pmdarima="^2.0.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pre-commit= {version = "^3.7.1", python = ">=3.11,<3.12"}
black = {version = "^22.8.0", python = ">=3.11,<3.12"}
pytest-cov = "^5.0.0"
pylint = "2.14.0"
toml = "0.10.2"
click-man="0.4.1"
mkdocs="1.6.0"
mkdocstrings-python="^1.10.5"
mkdocs-material-extensions="^1.3.1"

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.format]
preview = true

[tool.ruff.lint]
select = [
    "E",
    "W", # see: https://pypi.org/project/pycodestyle
    "F", # see: https://pypi.org/project/pyflakes
    "I", #see: https://pypi.org/project/isort/
    "UP", # see: https://docs.astral.sh/ruff/rules/#pyupgrade-up
#    "D", # see: https://pypi.org/project/pydocstyle
]
ignore = [
    "E203",
    "E402",  # todo: use noqa per line
    "E731",  # Do not assign a `lambda` expression, use a `def`
]
ignore-init-module-imports = true
unfixable = ["F401"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

#[tool.ruff.pycodestyle]
#ignore-overlong-task-comments = true

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-line-length = 120 # E501 reports lines that exceed the length of 100.


[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | tests/.*/setup.py
)/
'''
include = '\.pyi?$'
line-length = 88




[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
